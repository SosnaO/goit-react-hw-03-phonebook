{"version":3,"sources":["components/Filter/filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/contactListItem.module.css"],"names":["module","exports","ContactListItem","name","number","id","onDelete","className","styles","contactListItem","contact","buttonDelete","type","onClick","ContactList","contacts","map","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","formLabel","htmlFor","formInput","pattern","title","required","onChange","buttonSubmit","Component","Filter","filterLabel","filterInput","App","filter","changeFilter","element","deleteContacts","contactId","prevState","formSubmitHandler","some","alert","split","string","charAt","toUpperCase","slice","join","visibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","phonebook","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbe3f9ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__f2f9Q\",\"filterInput\":\"filter_filterInput__2vvS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"ContactForm_phonebook__1sIU6\",\"form\":\"ContactForm_form__1XQWy\",\"formLabel\":\"ContactForm_formLabel__1L9y8\",\"formInput\":\"ContactForm_formInput__3E2Iu\",\"buttonSubmit\":\"ContactForm_buttonSubmit__v6esj\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => (\r\n  <li className={styles.contactListItem}>\r\n    <p className={styles.contact}>\r\n      {' '}\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n     className={styles.buttonDelete}\r\n      type=\"button\"\r\n      onClick={() => onDelete(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","\r\nimport React from \"react\";\r\nimport ContactlistItem from './ContactListItem'\r\nimport PropTypes from 'prop-types';\r\n\r\n    const ContactList = ({ contacts, onDelete }) =>(\r\n        <ul>  {contacts.map(({ id, name, number })=> ( \r\n         <ContactlistItem \r\n         key={id}\r\n         id={id}\r\n         name={name}\r\n         number={number}\r\n         onDelete={onDelete}\r\n        />\r\n         ))}\r\n        </ul>\r\n    );\r\n\r\n    ContactList.propTypes = {\r\n        contacts: PropTypes.array.isRequired,\r\n        onDelete: PropTypes.func.isRequired,\r\n      };\r\n    \r\n  export default ContactList;","import React, { Component } from 'react';\r\nimport shortid from 'shortid'\r\nimport styles from './ContactForm.module.css'\r\nclass ContactForm extends Component{\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n     }\r\n     nameInputId=shortid.generate();\r\n     numberInputId=shortid.generate();\r\n\r\n    handleChange=event=>{\r\n       const {name, value}= event.currentTarget;\r\n       this.setState({id: shortid.generate(),[name]: value})\r\n    };\r\n  \r\n    handleSubmit=event=>{\r\n     event.preventDefault();\r\n     this.props.onSubmit(this.state);\r\n     this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n      this.setState({ name: '', number: '' });\r\n    };\r\n    render(){\r\n        return(\r\n        <form  className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.formLabel} htmlFor={this.nameInputId}>Name\r\n        <input className={styles.formInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id={this.nameInputId}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={this.state.name}\r\n        onChange={this.handleChange}\r\n        />\r\n        </label>\r\n\r\n        <label className={styles.formLabel} htmlFor={this.numberInputId}>Number\r\n            <input className={styles.formInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n       id={this.numberInputId}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={this.state.number}\r\n        onChange={this.handleChange}\r\n        />\r\n        </label>\r\n        <button className={styles.buttonSubmit} type=\"submit\">Add contact</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css'\r\n\r\nconst Filter =({ value, onChange }) => (\r\n    <label className={styles.filterLabel}>\r\n        Find contacts by name \r\n      <input className={styles.filterInput} type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      />\r\n     </label>\r\n);\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\nexport default Filter;","import React, { Component }  from 'react';\nimport './App.css';\nimport ContactList from './components/ContactList/ContactList'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport Filter from './components/Filter/Filter'\nimport styles from './components/ContactForm/ContactForm.module.css'\nclass App extends Component {\n  state = {\n    contacts: [ ],\n    filter: '',\n   }\n  componentDidMount(){\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts){\n    this.setState({ contacts: parsedContacts});\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts){\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts)) \n    }\n  }\n  changeFilter = element => {\n   this.setState({filter: element.currentTarget.value});\n  };\n    deleteContacts = contactId =>{\n    this.setState(prevState =>({\n      contacts: prevState.contacts.filter(contact =>contact.id !==contactId)\n    }));\n  }\n  formSubmitHandler = ({ id, name, number }) => {\n    const { contacts } = this.state;\n    if (contacts.some(contact => contact.name === name)) {\n      alert(\n        `${name\n          .split(' ')\n          .map(string => string.charAt(0).toUpperCase() + string.slice(1))\n          .join(\n            ' ',\n          )} is already in contacts.`,\n      );\n      return;\n    }\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, { id, name, number }],\n    }));\n  };\n  visibleContacts = () => {\n      const { filter, contacts } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      );\n  };\n  render(){\n    const { filter } = this.state;\n    const visibleContacts = this.visibleContacts();\n  return (\n  <div className={styles.phonebook}>\n  <h1>Phonebook</h1>\n  <ContactForm\n   onSubmit={this.formSubmitHandler}\n    />\n  <h2>Contacts</h2>\n  <Filter value={filter} onChange={this.changeFilter} />\n  <ContactList\n     contacts={visibleContacts}\n     onChange={this.changeFilter}\n     onDelete={this.deleteContacts} /> \n    </div>\n  );\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactListItem_contactListItem__3CQEl\",\"contact\":\"contactListItem_contact__1ufpG\",\"buttonDelete\":\"contactListItem_buttonDelete__1Se96\"};"],"sourceRoot":""}